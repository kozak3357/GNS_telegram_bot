import re
import logging
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import CallbackContext, ConversationHandler
from email_sender import send_email  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ email

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
SPORT, NAME, EMAIL, PHONE, PLAYER_URL, ADDITIONAL_INFO = range(6)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_data = {}

# –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
NAME_REGEX = r"^[a-zA-Z–∞-—è–ê-–Ø—ë–Å\s-]{2,50}$"  # –¢–æ–ª—å–∫–æ –±—É–∫–≤—ã, –ø—Ä–æ–±–µ–ª—ã, –¥–µ—Ñ–∏—Å—ã, 2-50 —Å–∏–º–≤–æ–ª–æ–≤
EMAIL_REGEX = r"^[\w\.-]+@[\w\.-]+\.\w+$"  # –ë–∞–∑–æ–≤–∞—è email-–≤–∞–ª–∏–¥–∞—Ü–∏—è
PHONE_REGEX = r"^\+?[0-9]{7,15}$"  # –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å + –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã (7-15 —Å–∏–º–≤–æ–ª–æ–≤)

# –í–∞–ª–∏–¥–Ω—ã–µ URL-—Ñ–æ—Ä–º–∞—Ç—ã
ELITEPROSPECTS_REGEX = r"^https://www\.eliteprospects\.com/player/\d+/[a-zA-Z-]+$"
TRANSFERMARKT_REGEX = r"^https://www\.transfermarkt\.[a-z]+/[^/]+/profil/[^/]+/\d+$"

async def start(update: Update, context: CallbackContext) -> int:
    """–ó–∞–ø—Ä–æ—Å –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Ä—Ç–∞"""
    keyboard = [["üèí –•–æ–∫–∫–µ–π", "‚öΩ –§—É—Ç–±–æ–ª"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("üèÜ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞:", reply_markup=reply_markup)
    return SPORT

async def choose_sport(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Ä—Ç–∞"""
    sport = update.message.text.strip().lower()

    if sport == "üèí —Ö–æ–∫–∫–µ–π":
        user_data["sport"] = "hockey"
    elif sport == "‚öΩ —Ñ—É—Ç–±–æ–ª":
        user_data["sport"] = "football"
    else:
        await update.message.reply_text("‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 'üèí –•–æ–∫–∫–µ–π' –∏–ª–∏ '‚öΩ –§—É—Ç–±–æ–ª'.")
        return SPORT

    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –∏–≥—Ä–æ–∫–∞:")
    return NAME

async def get_name(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–º—è –∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å email."""
    name = update.message.text.strip()

    if not re.match(NAME_REGEX, name):
        await update.message.reply_text("‚ö† –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è! –í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ –ø—Ä–æ–±–µ–ª—ã (–¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return NAME

    user_data["name"] = name
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ email –∏–≥—Ä–æ–∫–∞:")
    return EMAIL

async def get_email(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å email –∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞."""
    email = update.message.text.strip()

    if not re.match(EMAIL_REGEX, email):
        await update.message.reply_text("‚ö† –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:")
        return EMAIL

    user_data["email"] = email
    keyboard = [[KeyboardButton("üìû –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup=reply_markup)
    return PHONE

async def get_phone(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞."""
    if update.message.contact:
        user_data["phone"] = update.message.contact.phone_number
    else:
        phone = update.message.text.strip()
        if not re.match(PHONE_REGEX, phone):
            keyboard = [[KeyboardButton("üìû –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)]]
            reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
            await update.message.reply_text("‚ö† –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä! –í–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup=reply_markup)
            return PHONE
        user_data["phone"] = phone

    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞:")
    return PLAYER_URL

async def get_player_url(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ —Å —É—á–µ—Ç–æ–º —Å–ø–æ—Ä—Ç–∞."""
    url = update.message.text.strip()

    if user_data["sport"] == "hockey":
        if not re.match(ELITEPROSPECTS_REGEX, url):
            await update.message.reply_text("‚ö† –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞! –§–æ—Ä–º–∞—Ç –¥–ª—è —Ö–æ–∫–∫–µ—è: https://www.eliteprospects.com/player/12345/name")
            return PLAYER_URL
    elif user_data["sport"] == "football":
        if not re.match(TRANSFERMARKT_REGEX, url):
            await update.message.reply_text("‚ö† –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞! –§–æ—Ä–º–∞—Ç –¥–ª—è —Ñ—É—Ç–±–æ–ª–∞: https://www.transfermarkt.xx/name/profil/spieler/12345")
            return PLAYER_URL

    user_data["player_url"] = url
    await update.message.reply_text("–î–æ–±–∞–≤—å—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç'):")
    return ADDITIONAL_INFO


async def get_additional_info(update: Update, context: CallbackContext) -> int:
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º email"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    additional_info = update.message.text.strip() if update.message.text else "–ù–µ—Ç –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
    user_data["additional_info"] = additional_info

    subject = "üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∏–≥—Ä–æ–∫–∞"
    message = f"""
    üèÜ –°–ø–æ—Ä—Ç: {user_data['sport']}
    –ò–º—è: {user_data['name']}
    Email: {user_data['email']}
    –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}
    –ü—Ä–æ—Ñ–∏–ª—å: {user_data['player_url']}
    –î–æ–ø. –∏–Ω—Ñ–æ: {user_data['additional_info']}
    """

    send_email(user_data["sport"], subject, message)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email

    await update.message.reply_text("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    return ConversationHandler.END


async def cancel(update: Update, context: CallbackContext) -> int:
    """–û—Ç–º–µ–Ω–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö."""
    await update.message.reply_text("‚õî –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ—Ç–º–µ–Ω–µ–Ω.")
    return ConversationHandler.END
